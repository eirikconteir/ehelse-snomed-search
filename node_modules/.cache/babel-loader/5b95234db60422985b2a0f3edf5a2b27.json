{"ast":null,"code":"import { apiOptions, handleResponse } from \"../api\";\nexport const fetchPages = conceptId => {\n  const url = new URL(\"http://localhost:51338/sokeside/snomed\");\n  url.searchParams.set(\"id\", conceptId);\n  return fetch(url.toString(), apiOptions).then(response => handleResponse(response));\n};","map":{"version":3,"sources":["/Users/eirik/Kodz/ehelse-search/src/store/HelsenorgeStore.ts"],"names":["apiOptions","handleResponse","fetchPages","conceptId","url","URL","searchParams","set","fetch","toString","then","response"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,QAA3C;AAUA,OAAO,MAAMC,UAAU,GAAIC,SAAD,IAAuB;AAC/C,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAQ,wCAAR,CAAZ;AACAD,EAAAA,GAAG,CAACE,YAAJ,CAAiBC,GAAjB,CAAqB,IAArB,EAA2BJ,SAA3B;AACA,SAAOK,KAAK,CAACJ,GAAG,CAACK,QAAJ,EAAD,EAAiBT,UAAjB,CAAL,CAAkCU,IAAlC,CAAwCC,QAAD,IAC5CV,cAAc,CAAQU,QAAR,CADT,CAAP;AAGD,CANM","sourcesContent":["import { apiOptions, handleResponse } from \"../api\";\n\ninterface IHelsenorgePage {\n  title: string;\n  description: string;\n  link: string;\n}\n\ntype Pages = IHelsenorgePage[];\n\nexport const fetchPages = (conceptId: string) => {\n  const url = new URL(\"http://localhost:51338/sokeside/snomed\");\n  url.searchParams.set(\"id\", conceptId);\n  return fetch(url.toString(), apiOptions).then((response) =>\n    handleResponse<Pages>(response),\n  );\n};\n"]},"metadata":{},"sourceType":"module"}
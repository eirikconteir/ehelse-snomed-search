{"ast":null,"code":"import { apiOptions, handleResponse } from \"../api\";\nexport const fetchBranches = host => {\n  const url = new URL(`branches`, host);\n  return fetch(url.toString(), apiOptions).then(response => handleResponse(response)).then(branches => branches.filter(({\n    containsContent\n  }) => containsContent));\n};","map":{"version":3,"sources":["/Users/eirik/Kodz/ehelse-search/src/store/BranchStore.ts"],"names":["apiOptions","handleResponse","fetchBranches","host","url","URL","fetch","toString","then","response","branches","filter","containsContent"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,cAArB,QAA2C,QAA3C;AASA,OAAO,MAAMC,aAAa,GAAIC,IAAD,IAAkB;AAC7C,QAAMC,GAAG,GAAG,IAAIC,GAAJ,CAAS,UAAT,EAAoBF,IAApB,CAAZ;AACA,SAAOG,KAAK,CAACF,GAAG,CAACG,QAAJ,EAAD,EAAiBP,UAAjB,CAAL,CACJQ,IADI,CACEC,QAAD,IAAcR,cAAc,CAAWQ,QAAX,CAD7B,EAEJD,IAFI,CAEEE,QAAD,IACJA,QAAQ,CAACC,MAAT,CAAgB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAyBA,eAAzC,CAHG,CAAP;AAKD,CAPM","sourcesContent":["import { apiOptions, handleResponse } from \"../api\";\n\nexport interface IBranch {\n  path: string;\n  containsContent: boolean;\n}\n\ntype Branches = IBranch[];\n\nexport const fetchBranches = (host: string) => {\n  const url = new URL(`branches`, host);\n  return fetch(url.toString(), apiOptions)\n    .then((response) => handleResponse<Branches>(response))\n    .then((branches: Branches) =>\n      branches.filter(({ containsContent }) => containsContent),\n    );\n};\n"]},"metadata":{},"sourceType":"module"}
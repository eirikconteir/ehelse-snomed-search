{"ast":null,"code":"var _jsxFileName = \"/Users/eirik/Kodz/ehelse-search/src/pages/Search.tsx\";\nimport debounce from \"awesome-debounce-promise\";\nimport React, { useEffect } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport useConstant from \"use-constant\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport Concept from \"../components/Concept\";\nimport Error from \"../components/Error\";\nimport Form from \"../components/Form\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { defaultBranch, referenceSets, hosts } from \"../config\";\nimport { fetchBranches, fetchConcepts } from \"../store\";\n\nconst useSearch = () => {\n  // Handle the input text state\n  const [query, setQuery] = useQueryParam(\"q\", StringParam);\n  const [host, setHost] = useQueryParam(\"h\", StringParam);\n  const [branch, setBranch] = useQueryParam(\"b\", StringParam);\n  const [referenceSet, setReferenceSet] = useQueryParam(\"rs\", StringParam); // Debounce the original search async function\n\n  const debouncedSearch = useConstant(() => debounce(fetchConcepts, 500));\n  const searchRequest = useAsync(async () => {\n    if (host && branch && query) {\n      return debouncedSearch(host, branch, query, referenceSet || \"\");\n    }\n\n    return {};\n  }, [query, branch, referenceSet]); // Ensure a new request is made everytime the text changes (even if it's debounced)\n  // Return everything needed for the hook consumer\n\n  return {\n    host,\n    branch,\n    query,\n    referenceSet,\n    searchRequest,\n    setBranch,\n    setHost,\n    setQuery,\n    setReferenceSet\n  };\n};\n\nconst Search = ({\n  scope\n}) => {\n  const {\n    query,\n    setQuery,\n    host,\n    branch,\n    referenceSet,\n    setBranch,\n    setHost,\n    searchRequest,\n    setReferenceSet\n  } = useSearch();\n  const branchRequest = useAsync(fetchBranches, [host || hosts[0]]);\n  useEffect(() => {\n    if (branchRequest.result && !branch) {\n      const {\n        path\n      } = branchRequest.result.find(b => b.path === defaultBranch) || {};\n\n      if (path) {\n        setBranch(path);\n      }\n    }\n  }, [branch, branchRequest, setBranch]);\n  useEffect(() => {\n    const {\n      id\n    } = referenceSets.find(set => set.title === scope) || {};\n    setReferenceSet(id);\n\n    if (scope === \"disorder\") {} else if (scope === \"audience\") {\n      setReferenceSet(\"1031000202104\");\n    } else if (scope === \"symptom\") {\n      setReferenceSet(\"1051000202108\");\n    } else if (scope === \"treatment\") {\n      setReferenceSet(\"1021000202101\");\n    } else {\n      setReferenceSet(\"\");\n    }\n  }, [setReferenceSet, scope]);\n  useEffect(() => {\n    if (!host) {\n      setHost(hosts[0]);\n    }\n  }, [host, setHost]);\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n  };\n\n  const handleHostChange = event => {\n    setHost(event.target.value);\n  };\n\n  const handleBranchChange = event => {\n    setBranch(event.target.value);\n  };\n\n  const handleReferenceSetChange = event => {\n    setReferenceSet(event.target.value);\n  };\n\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const branches = branchRequest.result || [];\n  const {\n    totalElements = 0,\n    items = []\n  } = searchRequest.result || {};\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Header, {\n    scope: scope,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"row mb-5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col-9 col-md-10\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, branchRequest.error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, branchRequest.error.message), !branchRequest.loading && !branchRequest.error && React.createElement(Form, {\n    handleFormSubmit: handleFormSubmit,\n    handleHostChange: handleHostChange,\n    handleBranchChange: handleBranchChange,\n    handleReferenceSetChange: handleReferenceSetChange,\n    handleQueryChange: handleQueryChange,\n    hosts: hosts,\n    branches: branches,\n    referenceSet: referenceSet || \"\",\n    query: query || \"\",\n    scope: scope,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"col-3 col-md-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"d-flex h-100 align-items-center justify-content-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, searchRequest.loading && React.createElement(Loading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, searchRequest.error && React.createElement(Error, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, searchRequest.error.message), totalElements > 0 && React.createElement(\"p\", {\n    className: \"mb-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, `${totalElements} ${totalElements > 1 ? \"hits\" : \"hit\"}`), React.createElement(\"ul\", {\n    className: \"list-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, items.map(({\n    concept: {\n      conceptId,\n      fsn: {\n        term: fullySpecifiedName\n      },\n      pt: {\n        term: preferredTerm\n      }\n    }\n  }) => React.createElement(\"li\", {\n    key: conceptId,\n    className: \"list-group-item mb-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }, React.createElement(Concept, {\n    host: host || hosts[0],\n    branch: branch || \"\",\n    preferredTerm: preferredTerm,\n    fullySpecifiedName: fullySpecifiedName,\n    conceptId: conceptId,\n    scope: scope,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })))))));\n};\n\nexport default Search;","map":{"version":3,"sources":["/Users/eirik/Kodz/ehelse-search/src/pages/Search.tsx"],"names":["debounce","React","useEffect","useAsync","useConstant","StringParam","useQueryParam","Concept","Error","Form","Header","Loading","defaultBranch","referenceSets","hosts","fetchBranches","fetchConcepts","useSearch","query","setQuery","host","setHost","branch","setBranch","referenceSet","setReferenceSet","debouncedSearch","searchRequest","Search","scope","branchRequest","result","path","find","b","id","set","title","handleFormSubmit","event","preventDefault","handleHostChange","target","value","handleBranchChange","handleReferenceSetChange","handleQueryChange","branches","totalElements","items","error","message","loading","map","concept","conceptId","fsn","term","fullySpecifiedName","pt","preferredTerm"],"mappings":"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","sourcesContent":["import debounce from \"awesome-debounce-promise\";\nimport React, { ChangeEvent, FormEvent, useEffect } from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport useConstant from \"use-constant\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport Concept from \"../components/Concept\";\nimport Error from \"../components/Error\";\nimport Form from \"../components/Form\";\nimport Header from \"../components/Header\";\nimport Loading from \"../components/Loading\";\nimport { defaultBranch, referenceSets, hosts } from \"../config\";\nimport { fetchBranches, fetchConcepts, IConceptResult } from \"../store\";\n\ntype SearchProps = {\n  scope: string;\n};\n\nconst useSearch = () => {\n  // Handle the input text state\n  const [query, setQuery] = useQueryParam(\"q\", StringParam);\n  const [host, setHost] = useQueryParam(\"h\", StringParam);\n  const [branch, setBranch] = useQueryParam(\"b\", StringParam);\n  const [referenceSet, setReferenceSet] = useQueryParam(\"rs\", StringParam);\n\n  // Debounce the original search async function\n  const debouncedSearch = useConstant(() => debounce(fetchConcepts, 500));\n\n  const searchRequest = useAsync(async () => {\n    if (host && branch && query) {\n      return debouncedSearch(host, branch, query, referenceSet || \"\");\n    }\n    return ({} as any) as Readonly<IConceptResult>;\n  }, [query, branch, referenceSet]); // Ensure a new request is made everytime the text changes (even if it's debounced)\n\n  // Return everything needed for the hook consumer\n  return {\n    host,\n    branch,\n    query,\n    referenceSet,\n    searchRequest,\n    setBranch,\n    setHost,\n    setQuery,\n    setReferenceSet,\n  };\n};\n\nconst Search = ({ scope }: SearchProps) => {\n  const {\n    query,\n    setQuery,\n    host,\n    branch,\n    referenceSet,\n    setBranch,\n    setHost,\n    searchRequest,\n    setReferenceSet,\n  } = useSearch();\n  const branchRequest = useAsync(fetchBranches, [host || hosts[0]]);\n\n  useEffect(() => {\n    if (branchRequest.result && !branch) {\n      const { path } =\n        branchRequest.result.find((b) => b.path === defaultBranch) || {};\n      if (path) {\n        setBranch(path);\n      }\n    }\n  }, [branch, branchRequest, setBranch]);\n\n  useEffect(() => {\n    const { id } = referenceSets.find((set) => set.title === scope) || {};\n    setReferenceSet(id);\n    if (scope === \"disorder\") {\n    } else if (scope === \"audience\") {\n      setReferenceSet(\"1031000202104\");\n    } else if (scope === \"symptom\") {\n      setReferenceSet(\"1051000202108\");\n    } else if (scope === \"treatment\") {\n      setReferenceSet(\"1021000202101\");\n    } else {\n      setReferenceSet(\"\");\n    }\n  }, [setReferenceSet, scope]);\n\n  useEffect(() => {\n    if (!host) {\n      setHost(hosts[0]);\n    }\n  }, [host, setHost]);\n\n  const handleFormSubmit = (event: FormEvent) => {\n    event.preventDefault();\n  };\n\n  const handleHostChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setHost(event.target.value);\n  };\n  const handleBranchChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setBranch(event.target.value);\n  };\n\n  const handleReferenceSetChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setReferenceSet(event.target.value);\n  };\n\n  const handleQueryChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const branches = branchRequest.result || [];\n  const { totalElements = 0, items = [] } = searchRequest.result || {};\n\n  return (\n    <div className=\"container\">\n      <Header scope={scope} />\n      <div className=\"row mb-5\">\n        <div className=\"col-9 col-md-10\">\n          {branchRequest.error && <Error>{branchRequest.error.message}</Error>}\n          {!branchRequest.loading && !branchRequest.error && (\n            <Form\n              handleFormSubmit={handleFormSubmit}\n              handleHostChange={handleHostChange}\n              handleBranchChange={handleBranchChange}\n              handleReferenceSetChange={handleReferenceSetChange}\n              handleQueryChange={handleQueryChange}\n              hosts={hosts}\n              branches={branches}\n              referenceSet={referenceSet || \"\"}\n              query={query || \"\"}\n              scope={scope}\n            />\n          )}\n        </div>\n        <div className=\"col-3 col-md-2\">\n          <div className=\"d-flex h-100 align-items-center justify-content-center\">\n            {searchRequest.loading && <Loading />}\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          {searchRequest.error && <Error>{searchRequest.error.message}</Error>}\n          {totalElements > 0 && (\n            <p className=\"mb-1\">{`${totalElements} ${\n              totalElements > 1 ? \"hits\" : \"hit\"\n            }`}</p>\n          )}\n          <ul className=\"list-group\">\n            {items.map(\n              ({\n                concept: {\n                  conceptId,\n                  fsn: { term: fullySpecifiedName },\n                  pt: { term: preferredTerm },\n                },\n              }) => (\n                <li key={conceptId} className=\"list-group-item mb-3\">\n                  <Concept\n                    host={host || hosts[0]}\n                    branch={branch || \"\"}\n                    preferredTerm={preferredTerm}\n                    fullySpecifiedName={fullySpecifiedName}\n                    conceptId={conceptId}\n                    scope={scope}\n                  />\n                </li>\n              ),\n            )}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/eirik/Kodz/ehelse-search/src/components/Synonym.tsx\";\nimport React from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { languages } from \"../config\";\nimport { fetchSynonyms } from \"../store\";\n\nconst Synonym = ({\n  host,\n  branch,\n  preferredTerm,\n  conceptId\n}) => {\n  const request = useAsync(fetchSynonyms, [host, branch, conceptId]);\n  const {\n    items: synonyms = []\n  } = request.result || {};\n  return React.createElement(React.Fragment, null, synonyms.filter(({\n    type\n  }) => type === \"SYNONYM\").filter(({\n    lang\n  }) => languages.includes(lang)).filter(({\n    term\n  }) => term !== preferredTerm).map(({\n    term,\n    descriptionId: id\n  }) => React.createElement(\"p\", {\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, term)));\n};\n\nexport default Synonym;","map":{"version":3,"sources":["/Users/eirik/Kodz/ehelse-search/src/components/Synonym.tsx"],"names":["React","useAsync","languages","fetchSynonyms","Synonym","host","branch","preferredTerm","conceptId","request","items","synonyms","result","filter","type","lang","includes","term","map","descriptionId","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,aAAT,QAA8B,UAA9B;;AASA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,aAAhB;AAA+BC,EAAAA;AAA/B,CAAD,KAA8D;AAC5E,QAAMC,OAAO,GAAGR,QAAQ,CAACE,aAAD,EAAgB,CAACE,IAAD,EAAOC,MAAP,EAAeE,SAAf,CAAhB,CAAxB;AAEA,QAAM;AAAEE,IAAAA,KAAK,EAAEC,QAAQ,GAAG;AAApB,MAA2BF,OAAO,CAACG,MAAR,IAAkB,EAAnD;AAEA,SACE,0CACGD,QAAQ,CACNE,MADF,CACS,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAK,SADhC,EAEED,MAFF,CAES,CAAC;AAAEE,IAAAA;AAAF,GAAD,KAAcb,SAAS,CAACc,QAAV,CAAmBD,IAAnB,CAFvB,EAGEF,MAHF,CAGS,CAAC;AAAEI,IAAAA;AAAF,GAAD,KAAcA,IAAI,KAAKV,aAHhC,EAIEW,GAJF,CAIM,CAAC;AAAED,IAAAA,IAAF;AAAQE,IAAAA,aAAa,EAAEC;AAAvB,GAAD,KACH;AAAG,IAAA,GAAG,EAAEA,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaH,IAAb,CALH,CADH,CADF;AAWD,CAhBD;;AAkBA,eAAeb,OAAf","sourcesContent":["import React from \"react\";\nimport { useAsync } from \"react-async-hook\";\nimport { languages } from \"../config\";\nimport { fetchSynonyms } from \"../store\";\n\ntype SynonymProps = {\n  host: string;\n  branch: string;\n  preferredTerm: string;\n  conceptId: string;\n};\n\nconst Synonym = ({ host, branch, preferredTerm, conceptId }: SynonymProps) => {\n  const request = useAsync(fetchSynonyms, [host, branch, conceptId]);\n\n  const { items: synonyms = [] } = request.result || {};\n\n  return (\n    <>\n      {synonyms\n        .filter(({ type }) => type === \"SYNONYM\")\n        .filter(({ lang }) => languages.includes(lang))\n        .filter(({ term }) => term !== preferredTerm)\n        .map(({ term, descriptionId: id }) => (\n          <p key={id}>{term}</p>\n        ))}\n    </>\n  );\n};\n\nexport default Synonym;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/eirik/Kodz/ehelse-search/src/components/Form.tsx\";\nimport React from \"react\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport { referenceSets } from \"../config\";\n\nconst Form = ({\n  handleFormSubmit,\n  handleHostChange,\n  handleBranchChange,\n  handleReferenceSetChange,\n  handleQueryChange,\n  hosts,\n  branches,\n  scope,\n  referenceSet,\n  query\n}) => {\n  const [branch] = useQueryParam(\"b\", StringParam);\n  const [host] = useQueryParam(\"h\", StringParam);\n  return React.createElement(\"form\", {\n    onSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, !scope && React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"col-12\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"host\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Host\"), React.createElement(\"select\", {\n    id: \"host\",\n    className: \"form-control\",\n    value: host,\n    onChange: handleHostChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, hosts.map(hostname => React.createElement(\"option\", {\n    value: hostname,\n    key: hostname,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, hostname))))), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group mb-md-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"branch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Branch\"), React.createElement(\"select\", {\n    id: \"branch\",\n    className: \"form-control\",\n    value: branch,\n    onChange: handleBranchChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, branches.map(({\n    path\n  }) => React.createElement(\"option\", {\n    value: path,\n    key: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, path))))), React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group mb-md-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"referenceSet\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Reference set\"), React.createElement(\"select\", {\n    id: \"referenceSet\",\n    className: \"form-control\",\n    value: referenceSet,\n    onChange: handleReferenceSetChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, referenceSets.map(({\n    id,\n    title\n  }) => React.createElement(\"option\", {\n    value: id,\n    key: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, title)))))), React.createElement(\"div\", {\n    className: \"col\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group mb-md-0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"query\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Search\"), React.createElement(\"input\", {\n    id: \"query\",\n    className: \"form-control\",\n    type: \"text\",\n    value: query,\n    autoComplete: \"off\",\n    onChange: handleQueryChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })))));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/eirik/Kodz/ehelse-search/src/components/Form.tsx"],"names":["React","StringParam","useQueryParam","referenceSets","Form","handleFormSubmit","handleHostChange","handleBranchChange","handleReferenceSetChange","handleQueryChange","hosts","branches","scope","referenceSet","query","branch","host","map","hostname","path","id","title"],"mappings":"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","sourcesContent":["import React, { ChangeEvent, FormEvent } from \"react\";\nimport { StringParam, useQueryParam } from \"use-query-params\";\nimport { referenceSets } from \"../config\";\nimport { IBranch } from \"../store\";\n\ntype FormProps = {\n  handleFormSubmit: (event: FormEvent<HTMLFormElement>) => void;\n  handleHostChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  handleBranchChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  handleReferenceSetChange: (event: ChangeEvent<HTMLSelectElement>) => void;\n  handleQueryChange: (event: ChangeEvent<HTMLInputElement>) => void;\n  hosts: string[];\n  branches: IBranch[];\n  referenceSet: string;\n  query: string;\n  scope: string;\n};\n\nconst Form = ({\n  handleFormSubmit,\n  handleHostChange,\n  handleBranchChange,\n  handleReferenceSetChange,\n  handleQueryChange,\n  hosts,\n  branches,\n  scope,\n  referenceSet,\n  query,\n}: FormProps) => {\n  const [branch] = useQueryParam(\"b\", StringParam);\n  const [host] = useQueryParam(\"h\", StringParam);\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <div className=\"form-row\">\n        {!scope && (\n          <>\n            <div className=\"col-12\">\n              <div className=\"form-group\">\n                <label htmlFor=\"host\">Host</label>\n                <select\n                  id=\"host\"\n                  className=\"form-control\"\n                  value={host}\n                  onChange={handleHostChange}\n                >\n                  {hosts.map((hostname) => (\n                    <option value={hostname} key={hostname}>\n                      {hostname}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group mb-md-0\">\n                <label htmlFor=\"branch\">Branch</label>\n                <select\n                  id=\"branch\"\n                  className=\"form-control\"\n                  value={branch}\n                  onChange={handleBranchChange}\n                >\n                  {branches.map(({ path }) => (\n                    <option value={path} key={path}>\n                      {path}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n            <div className=\"col-md-4\">\n              <div className=\"form-group mb-md-0\">\n                <label htmlFor=\"referenceSet\">Reference set</label>\n                <select\n                  id=\"referenceSet\"\n                  className=\"form-control\"\n                  value={referenceSet}\n                  onChange={handleReferenceSetChange}\n                >\n                  {referenceSets.map(({ id, title }) => (\n                    <option value={id} key={id}>\n                      {title}\n                    </option>\n                  ))}\n                </select>\n              </div>\n            </div>\n          </>\n        )}\n        <div className=\"col\">\n          <div className=\"form-group mb-md-0\">\n            <label htmlFor=\"query\">Search</label>\n            <input\n              id=\"query\"\n              className=\"form-control\"\n              type=\"text\"\n              value={query}\n              autoComplete=\"off\"\n              onChange={handleQueryChange}\n            />\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}
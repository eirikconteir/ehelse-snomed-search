{"ast":null,"code":"/**\n * Convert the values in query to strings via the encode functions configured\n * in paramConfigMap\n *\n * @param paramConfigMap Map from query name to { encode, decode } config\n * @param query Query updates mapping param name to decoded value\n */\nexport function decodeQueryParams(paramConfigMap, encodedQuery) {\n  var decodedQuery = {};\n  var paramNames = Object.keys(encodedQuery);\n\n  for (var _i = 0, paramNames_1 = paramNames; _i < paramNames_1.length; _i++) {\n    var paramName = paramNames_1[_i];\n    var encodedValue = encodedQuery[paramName];\n\n    if (encodedValue == null) {\n      decodedQuery[paramName] = undefined;\n      continue;\n    }\n\n    if (!paramConfigMap[paramName]) {\n      if (process.env.NODE_ENV === 'development') {\n        console.warn(\"Passing through parameter \" + paramName + \" during decoding since it was not configured.\");\n      } // NOTE: we could just not include it, but it is probably convenient to have\n      // it default to be a string type.\n\n\n      decodedQuery[paramName] = encodedValue;\n    } else {\n      decodedQuery[paramName] = paramConfigMap[paramName].decode(encodedValue);\n    }\n  }\n\n  return decodedQuery;\n}","map":null,"metadata":{},"sourceType":"module"}